<!DOCTYPE html>
<html>
<head>
    <style>
        .container {
            max-width: 600px;
            margin: 50px auto;
            padding: 20px;
        }
        .welcome-form {
            background: #f8f9fa;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        .form-group {
            margin-bottom: 15px;
        }
        .form-control {
            width: 100%;
            padding: 8px;
            margin-bottom: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }
        .btn {
            padding: 8px 15px;
            margin: 5px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        .btn-primary {
            background: #0d6efd;
            color: white;
        }
        .btn-success {
            background: #198754;
            color: white;
        }
        .btn-secondary {
            background: #6c757d;
            color: white;
        }
        .error-message {
            color: red;
            margin-top: 5px;
            display: none;
        }
        .dedicated-rooms {
            display: flex;
            justify-content: space-between;
            margin-bottom: 15px;
        }
        .room-card {
            background: #e9ecef;
            border-radius: 8px;
            padding: 10px;
            text-align: center;
            width: 30%;
            cursor: pointer;
            transition: background 0.3s;
        }
        .room-card:hover {
            background: #dee2e6;
        }
        .username-display {
            text-align: center;
            margin-bottom: 15px;
            font-weight: bold;
            color: #0d6efd;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="welcome-form">
            <div id="username-form">
                <h2>Welcome to Video Chat</h2>
                <div class="form-group">
                    <label for="username">Enter your name:</label>
                    <input type="text" id="username" class="form-control" required>
                    <div id="username-error" class="error-message">Please enter a valid username</div>
                </div>
                <button onclick="submitUsername()" class="btn btn-primary">Continue</button>
            </div>

            <div id="room-content" style="display: none;">
                <div class="username-display">
                    Welcome, <span id="current-username"></span>
                    <button onclick="clearUsername()" class="btn btn-secondary btn-sm">Change</button>
                </div>

                <div class="dedicated-rooms">
                    <div class="room-card" onclick="joinDedicatedRoom('team-collab')">
                        <h4>Team Collab</h4>
                        <small>Professional meetings</small>
                    </div>
                    <div class="room-card" onclick="joinDedicatedRoom('friends-hangout')">
                        <h4>Friends Hangout</h4>
                        <small>Casual meetups</small>
                    </div>
                    <div class="room-card" onclick="joinDedicatedRoom('study-group')">
                        <h4>Study Group</h4>
                        <small>Learning sessions</small>
                    </div>
                </div>

                <div id="room-actions">
                    <div class="form-group">
                        <button onclick="createRoom()" class="btn btn-primary">Create New Room</button>
                    </div>
                    <div class="form-group">
                        <input type="text" id="roomInput" class="form-control" placeholder="Enter Room ID">
                        <button onclick="joinRoom()" class="btn btn-success">Join Room</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const username = localStorage.getItem('username');
            if (username) {
                document.getElementById('username').value = username;
                showRoomContent(username);
            }
        });

        function clearUsername() {
            localStorage.removeItem('username');
            document.getElementById('username-form').style.display = 'block';
            document.getElementById('room-content').style.display = 'none';
        }

        async function submitUsername() {
            const username = document.getElementById('username').value.trim();
            const errorElement = document.getElementById('username-error');
            
            if (!username) {
                errorElement.style.display = 'block';
                return;
            }

            try {
                const response = await fetch('/Home/ValidateUsername', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ username })
                });

                if (response.ok) {
                    localStorage.setItem('username', username);
                    showRoomContent(username);
                    errorElement.style.display = 'none';
                } else {
                    errorElement.style.display = 'block';
                }
            } catch (error) {
                console.error('Error:', error);
                errorElement.style.display = 'block';
            }
        }

        function showRoomContent(username) {
            document.getElementById('username-form').style.display = 'none';
            document.getElementById('room-content').style.display = 'block';
            document.getElementById('current-username').textContent = username;
        }

        function joinDedicatedRoom(roomType) {
            const username = localStorage.getItem('username');
            if (!username) {
                location.reload();
                return;
            }

            // You can modify this to create specific rooms based on room type
            createRoom(roomType);
        }

        async function createRoom(roomType = null) {
            const username = localStorage.getItem('username');
            if (!username) {
                location.reload();
                return;
            }

            try {
                const response = await fetch('/Home/CreateRoom', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ 
                        username, 
                        roomType: roomType 
                    })
                });

                if (response.ok) {
                    const data = await response.json();
                    window.location.href = `/${data.roomId}`;
                }
            } catch (error) {
                console.error('Error:', error);
            }
        }

        function joinRoom() {
            const username = localStorage.getItem('username');
            if (!username) {
                location.reload();
                return;
            }

            const roomId = document.getElementById('roomInput').value.trim();
            if (roomId) {
                window.location.href = `/${roomId}`;
            }
        }
    </script>
</body>
</html>